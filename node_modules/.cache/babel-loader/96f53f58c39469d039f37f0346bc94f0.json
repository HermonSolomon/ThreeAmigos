{"ast":null,"code":"import _defineProperty from \"/Users/Hermon/Desktop/march-shden-labs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Hermon/Desktop/march-shden-labs/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nimport { blogArticle, BlogDetail } from \"./data\";\nconst AppContext = React.createContext(); //(ReactContext) provider && consumer\n\nclass AppProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      blogArticle: [],\n      blogDetails: BlogDetail,\n      detailProduct: detailProduct,\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        //unpacks the values into a single product from the array of storeProduct list data\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.setblogArticle = () => {\n      let tempArticles = [];\n      blogArticle.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempArticles = [...tempArticles, singleItem];\n      });\n      this.setState(() => {\n        return {\n          blogArticle: tempArticles\n        };\n      });\n    };\n\n    this.getBlogArticle = id => {\n      const article = this.state.blogArticle.find(item => item.id === id);\n      return article;\n    };\n\n    this.handleBlogDetail = id => {\n      const article = this.getBlogArticle(id);\n      this.setState(() => {\n        return {\n          blogDetail: article\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.incrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.decrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotal();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => item.id !== id);\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        // N.B. callback function\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    this.setblogArticle();\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      // AppContext.Provider sits on top of component tree\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        handleBlogDetail: this.handleBlogDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        incrementCart: this.incrementCart,\n        decrementCart: this.decrementCart,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer }; // tester = () => {\n//  console.log('State Products:', this.state.products[0].inCart);\n//  console.log('Data Products:', storeProducts[0].inCart);\n//  const tempProducts = [...this.state.products];\n//  tempProducts[0].inCart = true\n//  this.setState(() => {\n//   return {products:tempProducts}\n//  },() => {\n//  console.log('State Products: ', this.state.products[0].inCart);\n//  console.log('Data Products: ', storeProducts[0].inCart);\n//  })\n// }","map":{"version":3,"sources":["/Users/Hermon/Desktop/march-shden-labs/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","blogArticle","BlogDetail","AppContext","createContext","AppProvider","state","products","cart","blogDetails","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","setblogArticle","tempArticles","getBlogArticle","article","handleBlogDetail","blogDetail","addToCart","index","indexOf","inCart","count","price","total","addTotal","openModal","closeModal","incrementCart","tempCart","selectedProduct","decrementCart","removeItem","removedProduct","filter","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","AppConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct, } from \"./data\";\nimport { blogArticle, BlogDetail } from \"./data\";\n\nconst AppContext = React.createContext(); //(ReactContext) provider && consumer\n\nclass AppProvider extends Component {\n  state = {\n    products: [],\n    cart: [],\n    blogArticle: [],\n    blogDetails: BlogDetail,\n    detailProduct: detailProduct,\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0\n  };\n\n  componentDidMount() {\n    this.setProducts();\n    this.setblogArticle();\n  }\n\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      //unpacks the values into a single product from the array of storeProduct list data\n      const singleItem = {\n        ...item\n      };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  };\n\n  // getItem retrives the right product from products according to thier id's as a utility method from data.js.\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n\n  // Handles each product clicked according to thier id's to display in details page\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        detailProduct: product\n      };\n    });\n  };\n\n\n  \n\n  setblogArticle = () => {\n    let tempArticles = [];\n    blogArticle.forEach(item => {\n      const singleItem = {\n        ...item\n      };\n      tempArticles = [...tempArticles, singleItem];\n    });\n    this.setState(() => {\n      return {\n        blogArticle: tempArticles\n      };\n    });\n  };\n\n  // get BlogArticle\n  getBlogArticle = id => {\n    const article = this.state.blogArticle.find(item => item.id === id);\n    return article;\n  };\n\n  handleBlogDetail = id => {\n    const article = this.getBlogArticle(id);\n    this.setState(() => {\n      return {\n        blogDetail: article\n      };\n    });\n  };\n\n\n\n\n\n  addToCart = id => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n\n    this.setState(\n      () => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      },\n      () => {\n        this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n      }\n    );\n  };\n\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        modalProduct: product,\n        modalOpen: true\n      };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return {\n        modalOpen: false\n      };\n    });\n  };\n\n  incrementCart = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart]\n        };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n  decrementCart = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      product.total = product.count * product.price;\n      this.setState(\n        () => {\n          return {\n            cart: [...tempCart]\n          };\n        },\n        () => {\n          this.addTotal();\n        }\n      );\n    }\n  };\n\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    tempCart = tempCart.filter(item => item.id !== id);\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n\n  clearCart = () => {\n    this.setState(\n      () => {\n        return {\n          cart: []\n        };\n      },\n      () => {\n        // N.B. callback function\n        this.setProducts();\n        this.addTotal();\n      }\n    );\n  };\n\n  addTotal = () => {\n    let subTotal = 0;\n    this.state.cart.map(item => (subTotal += item.total));\n\n    const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      };\n    });\n  };\n\n  render() {\n    return (\n      <AppContext.Provider // AppContext.Provider sits on top of component tree\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          handleBlogDetail: this.handleBlogDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          incrementCart: this.incrementCart,\n          decrementCart: this.decrementCart,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer };\n\n// tester = () => {\n//  console.log('State Products:', this.state.products[0].inCart);\n//  console.log('Data Products:', storeProducts[0].inCart);\n\n//  const tempProducts = [...this.state.products];\n//  tempProducts[0].inCart = true\n//  this.setState(() => {\n//   return {products:tempProducts}\n//  },() => {\n//  console.log('State Products: ', this.state.products[0].inCart);\n//  console.log('Data Products: ', storeProducts[0].inCart);\n//  })\n// }\n"]},"metadata":{},"sourceType":"module"}