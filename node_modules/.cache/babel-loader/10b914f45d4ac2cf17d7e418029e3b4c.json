{"ast":null,"code":"import _defineProperty from \"/Users/Hermon/Projects/WebDevMaster/march-shden-labs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Hermon/Projects/WebDevMaster/march-shden-labs/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst AppContext = React.createContext(); //(ReactContext) provider && consumer\n\nclass AppProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        //unpacks the values into a single product from the array of storeProduct list data\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.incrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.decrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotal();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => item.id !== id);\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        // N.B. callback function\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      // ProductContext.Provider sits on top of component tree\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        incrementCart: this.incrementCart,\n        decrementCart: this.decrementCart,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.props.children, \" \");\n  }\n\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer }; // tester = () => {\n//  console.log('State Products:', this.state.products[0].inCart);\n//  console.log('Data Products:', storeProducts[0].inCart);\n//  const tempProducts = [...this.state.products];\n//  tempProducts[0].inCart = true\n//  this.setState(() => {\n//   return {products:tempProducts}\n//  },() => {\n//  console.log('State Products: ', this.state.products[0].inCart);\n//  console.log('Data Products: ', storeProducts[0].inCart);\n//  })\n// }","map":{"version":3,"sources":["/Users/Hermon/Projects/WebDevMaster/march-shden-labs/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","AppContext","createContext","AppProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotal","openModal","closeModal","incrementCart","tempCart","selectedProduct","decrementCart","removeItem","removedProduct","filter","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","AppConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, {\n Component\n} from \"react\";\nimport {\n storeProducts,\n detailProduct\n} from \"./data\";\n\nconst AppContext = React.createContext(); //(ReactContext) provider && consumer\n\nclass AppProvider extends Component {\n state = {\n  products: [],\n  detailProduct: detailProduct,\n  cart: [],\n  modalOpen: false,\n  modalProduct: detailProduct,\n  cartSubTotal: 0,\n  cartTax: 0,\n  cartTotal: 0\n };\n\n componentDidMount() {\n  this.setProducts();\n }\n\n setProducts = () => {\n  let tempProducts = [];\n  storeProducts.forEach(item => {\n   //unpacks the values into a single product from the array of storeProduct list data\n   const singleItem = {\n    ...item\n   };\n   tempProducts = [...tempProducts, singleItem];\n  });\n  this.setState(() => {\n   return {\n    products: tempProducts\n   };\n  });\n };\n\n // getItem retrives the right product from products according to thier id's as a utility method from data.js.\n getItem = id => {\n  const product = this.state.products.find(item => item.id === id);\n  return product;\n };\n\n // Handles each product clicked according to thier id's to display in details page\n handleDetail = id => {\n  const product = this.getItem(id);\n  this.setState(() => {\n   return {\n    detailProduct: product\n   };\n  });\n };\n\n addToCart = id => {\n  let tempProducts = [...this.state.products];\n  const index = tempProducts.indexOf(this.getItem(id));\n  const product = tempProducts[index];\n  product.inCart = true;\n  product.count = 1;\n  const price = product.price;\n  product.total = price;\n\n  this.setState(\n   () => {\n    return {\n     products: tempProducts,\n     cart: [...this.state.cart, product]\n    };\n   },\n   () => {\n    this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n   }\n  );\n };\n\n openModal = id => {\n  const product = this.getItem(id);\n  this.setState(() => {\n   return {\n    modalProduct: product,\n    modalOpen: true\n   };\n  });\n };\n\n closeModal = () => {\n  this.setState(() => {\n   return {\n    modalOpen: false\n   };\n  });\n };\n\n incrementCart = id => {\n  let tempCart = [...this.state.cart];\n  const selectedProduct = tempCart.find(item => item.id === id);\n  const index = tempCart.indexOf(selectedProduct);\n  const product = tempCart[index];\n  product.count = product.count + 1;\n  product.total = product.count * product.price;\n\n  this.setState(\n   () => {\n    return {\n     cart: [...tempCart]\n    };\n   },\n   () => {\n    this.addTotal();\n   }\n  );\n };\n decrementCart = id => {\n  let tempCart = [...this.state.cart];\n  const selectedProduct = tempCart.find(item => item.id === id);\n  const index = tempCart.indexOf(selectedProduct);\n  const product = tempCart[index];\n  product.count = product.count - 1;\n\n  if (product.count === 0) {\n   this.removeItem(id);\n  } else {\n   product.total = product.count * product.price;\n   this.setState(\n    () => {\n     return {\n      cart: [...tempCart]\n     };\n    },\n    () => {\n     this.addTotal();\n    }\n   );\n  }\n };\n\n removeItem = id => {\n  let tempProducts = [...this.state.products];\n  let tempCart = [...this.state.cart];\n\n  const index = tempProducts.indexOf(this.getItem(id));\n  let removedProduct = tempProducts[index];\n  removedProduct.inCart = false;\n  removedProduct.count = 0;\n  removedProduct.total = 0;\n\n  tempCart = tempCart.filter(item => item.id !== id);\n\n  this.setState(\n   () => {\n    return {\n     cart: [...tempCart],\n     products: [...tempProducts]\n    };\n   },\n   () => {\n    this.addTotal();\n   }\n  );\n };\n\n clearCart = () => {\n  this.setState(\n   () => {\n    return {\n     cart: []\n    };\n   },\n   () => {\n    // N.B. callback function\n    this.setProducts();\n    this.addTotal();\n   }\n  );\n };\n\n addTotal = () => {\n  let subTotal = 0;\n  this.state.cart.map(item => (subTotal += item.total));\n\n  const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n  const tax = parseFloat(tempTax.toFixed(2));\n  const total = subTotal + tax;\n  this.setState(() => {\n   return {\n    cartSubTotal: subTotal,\n    cartTax: tax,\n    cartTotal: total\n   };\n  });\n };\n\n render() {\n  return ( <AppContext.Provider // ProductContext.Provider sits on top of component tree\n   value = {\n    {\n     ...this.state,\n     handleDetail: this.handleDetail,\n     addToCart: this.addToCart,\n     openModal: this.openModal,\n     closeModal: this.closeModal,\n     incrementCart: this.incrementCart,\n     decrementCart: this.decrementCart,\n     removeItem: this.removeItem,\n     clearCart: this.clearCart\n    }\n   } >\n   {\n    this.props.children\n   } </AppContext.Provider>\n  );\n }\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport {\n AppProvider,\n AppConsumer\n};\n\n// tester = () => {\n//  console.log('State Products:', this.state.products[0].inCart);\n//  console.log('Data Products:', storeProducts[0].inCart);\n\n//  const tempProducts = [...this.state.products];\n//  tempProducts[0].inCart = true\n//  this.setState(() => {\n//   return {products:tempProducts}\n//  },() => {\n//  console.log('State Products: ', this.state.products[0].inCart);\n//  console.log('Data Products: ', storeProducts[0].inCart);\n//  })\n// }\n"]},"metadata":{},"sourceType":"module"}