{"ast":null,"code":"import _defineProperty from \"/Users/Hermon/Projects/WebDevMaster/march-shden-labs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Hermon/Projects/WebDevMaster/march-shden-labs/src/Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst AppContext = React.createContext();\n\nclass AppProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: storeProducts,\n      detailProduct: detailProduct,\n      modalOpen: false,\n      modalProduct: detailProduct\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        //unpacks the values into a single product from the array of storeProduct list data\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.incrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.decrementCart = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotal();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => item.id !== id);\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotal();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        // N.B. callback function\n        this.setProducts();\n        this.addTotal();\n      });\n    };\n\n    this.addTotal = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(AppContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        incrementCart: this.incrementCart,\n        decrementCart: this.decrementCart,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer };","map":{"version":3,"sources":["/Users/Hermon/Projects/WebDevMaster/march-shden-labs/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","AppContext","createContext","AppProvider","state","products","modalOpen","modalProduct","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","cart","addTotal","openModal","closeModal","incrementCart","tempCart","selectedProduct","decrementCart","removeItem","removedProduct","filter","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","cartSubTotal","cartTax","cartTotal","componentDidMount","render","props","children","AppConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\n\nconst AppContext = React.createContext();\n\nclass AppProvider extends Component {\n  state = {\n    products: storeProducts,\n    detailProduct: detailProduct,\n    modalOpen: false,\n    modalProduct: detailProduct\n  };\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      //unpacks the values into a single product from the array of storeProduct list data\n      const singleItem = {\n        ...item\n      };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  };\n\n  // getItem retrives the right product from products according to thier id's as a utility method from data.js.\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n\n  // Handles each product clicked according to thier id's to display in details page\n  handleDetail = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        detailProduct: product\n      };\n    });\n  };\n\n  addToCart = id => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n\n    this.setState(\n      () => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      },\n      () => {\n        this.addTotal(); // through this callback function each time we add items to our cart the values for cartSubTotal, cartTax, cartTotal will update dynamically\n      }\n    );\n  };\n\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        modalProduct: product,\n        modalOpen: true\n      };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return {\n        modalOpen: false\n      };\n    });\n  };\n\n  incrementCart = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart]\n        };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n  decrementCart = id => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find(item => item.id === id);\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      product.total = product.count * product.price;\n      this.setState(\n        () => {\n          return {\n            cart: [...tempCart]\n          };\n        },\n        () => {\n          this.addTotal();\n        }\n      );\n    }\n  };\n\n  removeItem = id => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    tempCart = tempCart.filter(item => item.id !== id);\n\n    this.setState(\n      () => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      },\n      () => {\n        this.addTotal();\n      }\n    );\n  };\n\n  clearCart = () => {\n    this.setState(\n      () => {\n        return {\n          cart: []\n        };\n      },\n      () => {\n        // N.B. callback function\n        this.setProducts();\n        this.addTotal();\n      }\n    );\n  };\n\n  addTotal = () => {\n    let subTotal = 0;\n    this.state.cart.map(item => (subTotal += item.total));\n\n    const tempTax = subTotal * 0.1; // 0.1 as tax is going to be 10%\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subTotal,\n        cartTax: tax,\n        cartTotal: total\n      };\n    });\n  };\n\n  render() {\n    return (\n      <AppContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          incrementCart: this.incrementCart,\n          decrementCart: this.decrementCart,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart\n        }}\n      >\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nconst AppConsumer = AppContext.Consumer;\nexport { AppProvider, AppConsumer };\n"]},"metadata":{},"sourceType":"module"}